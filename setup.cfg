[tool:pytest]
# Alternative pytest configuration location
# Main configuration is in pyproject.toml

[coverage:run]
source = src
omit = 
    */tests/*
    */__pycache__/*
    */site-packages/*
    */venv/*
    */.venv/*
    */dist/*
    */build/*
    */.pytest_cache/*
    */htmlcov/*
    src/llm/prompts/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @(abc\.)?abstractmethod
    class .*\bProtocol\):
    \.\.\.$

[flake8]
max-line-length = 100
exclude = 
    .git,
    __pycache__,
    venv,
    .venv,
    build,
    dist,
    *.egg-info,
    .pytest_cache,
    htmlcov,
    data,
    outputs,
    notebooks,
    docker
ignore = 
    E203,  # whitespace before ':'
    E266,  # too many leading '#' for block comment
    W503,  # line break before binary operator
    E501,  # line too long (handled by black)
    B008,  # do not perform function calls in argument defaults
per-file-ignores =
    __init__.py: F401
    tests/*: F401,F811

[mypy]
python_version = 3.8
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
ignore_missing_imports = True
exclude = (?x)(
    ^venv/
    | ^.venv/
    | ^build/
    | ^dist/
    | ^tests/
    | ^notebooks/
    | ^data/
    | ^outputs/
    | ^docker/
)
mypy_path = src

[isort]
profile = black
line_length = 100
skip_glob = */venv/*,*/.venv/*,*/migrations/*
known_first_party = src,core,extractors,llm,models,utils
src_paths = src,tests
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER